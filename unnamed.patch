Index: Input.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Input.py	(revision )
+++ Input.py	(revision )
@@ -0,0 +1,84 @@
+import datetime
+
+def get_Date():
+    # input date
+    while True:
+        try:
+            year = int(input('Enter date (year): '))
+            month = int(input('Enter date (month):'))
+            day = int(input('Enter date (day):'))
+            tmp = datetime.date(year, month, day)           #chack date
+        except ValueError:
+            print('Values is not correct. Try again.')
+            continue
+        return tmp
+
+def get_temp():
+    #input temperature
+    while True:
+        try:
+            tmp = int(input('Enter Temperature (eg. +8): '))
+        except ValueError:                                  #chack temperature
+            print('Values is not correct. Try again.')
+            continue
+        return tmp
+
+def get_humidity():
+    #input humidity
+    while True:
+        try:
+            tmp = int(input('Enter humidity (%): '))
+        except ValueError:                                  #chack huminidy
+            print('Values is not correct. Try again.')
+            continue
+        if 0<=tmp<=100: return tmp
+        else: print('Values is not correct. Try again.')
+
+def get_preasure():
+    #input preasure
+    while True:
+        try:
+            tmp = int(input('Enter preasure (mm): '))
+        except ValueError:                              #chack preasure
+            print('Values is not correct. Try again.')
+            continue
+        return tmp
+
+def get_wspeed():
+    #input wind speed
+    while True:
+        try:
+            tmp = float(input('Enter wind speed (m/sec): '))
+        except ValueError:                              #chack wind speed
+            print('Values is not correct. Try again.')
+            continue
+        return tmp
+
+def get_year():
+    while True:
+        try:
+            tmp = int(input('Enter year: '))
+        except ValueError:
+            print('Values is not correct. Try again.')
+            continue
+        if 0<=tmp<=2016: return tmp
+        else: print('Values is not correct. Try again.')
+
+def get_month():
+    while True:
+        try:
+            tmp = int(input('Enter month: '))
+        except ValueError:
+            print('Values is not correct. Try again.')
+            continue
+        if 1<=tmp<=12: return tmp
+        else: print('Values is not correct. Try again.')
+
+def get_choice():
+    while True:
+        try:
+            tmp = int(input())
+        except ValueError:
+            print('Choice is not correct. Try again.')
+            continue
+        return tmp
\ No newline at end of file
Index: Output.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Output.py	(revision )
+++ Output.py	(revision )
@@ -0,0 +1,33 @@
+import W_diary
+import Menu
+import Input
+
+def show_data():
+    # show all data in our diary
+    Menu.clear()
+    print('Date\t\tTemp\tPreasure\tHumidity\tWind Speed\tWind Direction\tPrecipitation')
+    count = 0
+    for i in W_diary.weather:
+        print(i.isoformat() + '\t' + str(W_diary.weather[i][0]) + '\t' + str(W_diary.weather[i][1]) + '\t\t'
+              + str(W_diary.weather[i][2]) + '\t\t' + str(W_diary.weather[i][3]) + '\t\t' + str(W_diary.weather[i][4])
+              + '\t\t' + str(W_diary.weather[i][5]))
+        count += 1
+    if not count: print('Diary is empty')
+    tmp = input('Press Enter to continue...')
+
+def show_data_by_month():
+    # show weather during chosen month
+    Menu.clear()
+    year = Input.get_year()
+    month = Input.get_month()  # reading month number
+    count = 0
+    print('Date\t\tTemp\tPreasure\tHumidity\tWind Speed\tWind Direction\tPrecipitation')
+    for i in W_diary.weather:                       #show all data about thise month that exsist in diary
+        if (i.year == year) & (i.month == month):
+            print(i.isoformat() + '\t' + str(W_diary.weather[i][0]) + '\t' + str(W_diary.weather[i][1]) + '\t\t'
+              + str(W_diary.weather[i][2]) + '\t\t' + str(W_diary.weather[i][3]) + '\t\t' + str(W_diary.weather[i][4])
+              + '\t\t' + str(W_diary.weather[i][5]))
+            count += 1
+    if not count: print('Diary is empty')
+    tmp = input('Press Enter to continue...')
+
Index: Lab1_Zamyatin-master/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/.gitignore	(revision )
+++ Lab1_Zamyatin-master/.gitignore	(revision )
@@ -0,0 +1,62 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+env/
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+*.egg-info/
+.installed.cfg
+*.egg
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*,cover
+.hypothesis/
+
+# Translations
+*.mo
+*.pot
+
+# Django stuff:
+*.log
+
+# Sphinx documentation
+docs/_build/
+
+# PyBuilder
+target/
+
+#Ipython Notebook
+.ipynb_checkpoints
Index: Open_file.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Open_file.py	(revision )
+++ Open_file.py	(revision )
@@ -0,0 +1,13 @@
+import pickle
+
+def open_data(obj):
+#load data from file
+    with open('weather.pickle','rb') as weatherFile:
+        tmp = {}
+        try: tmp = pickle.load(weatherFile)
+        except FileNotFoundError:pass
+        obj.update(tmp)
+
+def save_data(obj):
+    with open('weather.pickle', 'wb') as weatherFile:       #open file with data
+        pickle.dump(obj, weatherFile)                       #save data
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: Lab1_Zamyatin-master/Output.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/Output.py	(revision )
+++ Lab1_Zamyatin-master/Output.py	(revision )
@@ -0,0 +1,44 @@
+import W_diary
+import Menu
+import Input
+
+def show_data():
+    # show all data in our diary
+    Menu.clear()
+    print('Date\t\tTemp\tPreasure\tHumidity\tWind Speed\tWind Direction\tPrecipitation')
+    count = 0
+    for i in W_diary.weather:
+        print(i.isoformat() + '\t' + str(W_diary.weather[i][0]) + '\t' 
+		      + str(W_diary.weather[i][1]) + '\t\t'
+              + str(W_diary.weather[i][2]) + '\t\t' 
+			  + str(W_diary.weather[i][3]) + '\t\t' 
+			  + str(W_diary.weather[i][4]) + '\t\t' 
+			  + str(W_diary.weather[i][5]))
+        count += 1
+    if not count: 
+		print('Diary is empty')
+    tmp = input('Press Enter to continue...')
+
+def show_data_by_month():
+    # show weather during chosen month
+    Menu.clear()
+    year = Input.get_year()
+	# reading month number
+    month = Input.get_month()  
+    count = 0
+    print('Date\t\tTemp\tPreasure\tHumidity\tWind Speed\tWind Direction\tPrecipitation')
+    #show all data about thise month that exsist in diary
+	for i in W_diary.weather:                       
+        if (i.year == year) & (i.month == month):
+            print(i.isoformat() + '\t' 
+				  + str(W_diary.weather[i][0]) + '\t' 
+				  + str(W_diary.weather[i][1]) + '\t\t'
+				  + str(W_diary.weather[i][2]) + '\t\t'
+				  + str(W_diary.weather[i][3]) + '\t\t' 
+				  + str(W_diary.weather[i][4]) + '\t\t'
+				  + str(W_diary.weather[i][5]))
+            count += 1
+    if not count: 
+		print('Diary is empty')
+    tmp = input('Press Enter to continue...')
+
Index: Lab1_Zamyatin-master/Main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/Main.py	(revision )
+++ Lab1_Zamyatin-master/Main.py	(revision )
@@ -0,0 +1,12 @@
+import Menu
+import Open_file
+import W_diary
+
+def main ():
+ #load data from file
+	Open_file.open_data(W_diary.weather)        
+ #run menu
+	Menu.print_menu()                          
+
+main()
+
Index: Lab1_Zamyatin-master/Open_file.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/Open_file.py	(revision )
+++ Lab1_Zamyatin-master/Open_file.py	(revision )
@@ -0,0 +1,17 @@
+import pickle
+
+def open_data(obj):
+#load data from file
+    with open('weather.pickle','rb') as weatherFile:
+        tmp = {}
+        try: 
+			tmp = pickle.load(weatherFile)
+        except FileNotFoundError:
+			pass
+        obj.update(tmp)
+
+def save_data(obj):
+    #open file with data
+	with open('weather.pickle', 'wb') as weatherFile: 
+		#save data
+        pickle.dump(obj, weatherFile)                       
\ No newline at end of file
Index: .idea/WeatherDiary.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/WeatherDiary.iml	(revision )
+++ .idea/WeatherDiary.iml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="TestRunnerService">
+    <option name="PROJECT_TEST_RUNNER" value="Unittests" />
+  </component>
+</module>
\ No newline at end of file
Index: Lab1_Zamyatin-master/W_diary.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/W_diary.py	(revision )
+++ Lab1_Zamyatin-master/W_diary.py	(revision )
@@ -0,0 +1,42 @@
+import datetime
+import Open_file
+import Input
+
+weather = {}
+
+def push_data():
+
+    d1 = datetime.date(2015, 10, 10)
+    d2 = datetime.date(2015, 10, 12)
+    tmp = {d1:['+10', 750, 48, 3.0, 'W', 'None'],
+           d2:['+8', 747, 53, 3.3, 'SW', 'None']}
+    weather.update(tmp)
+
+
+def add_data():
+#add data to our weather diary#
+    date = Input.get_Date()
+    temp = Input.get_temp()
+    preasure = Input.get_preasure()
+    humidity = Input.get_humidity()
+    wspeed = Input.get_wspeed()
+    wdirect = input('Enter wind direction (eg. SW or S): ')
+    prec = input('Enter precipitations (eg. Rain or Snow): ')
+    tmp = {date:[temp, preasure, humidity, wspeed, wdirect, prec]}
+	#rewrite data that already exsist
+    weather.update(tmp) 
+	#save changes in file
+    Open_file.save_data(weather)                               
+    tmp = input('Adding/Editing Successful. Press Enter to continue...')
+
+
+def rm_data():
+# remove data from our diary
+    date = Input.get_Date()
+    if date in weather:
+        del weather[date]
+		#save changes in file
+        Open_file.save_data(weather)            
+        tmp = input('Removing Successful. Press Enter to continue...')
+    else:
+        tmp = input('Day in diary not found. Press Enter to continue...')
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+WeatherDiary
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: Lab1_Zamyatin-master/Input.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/Input.py	(revision )
+++ Lab1_Zamyatin-master/Input.py	(revision )
@@ -0,0 +1,103 @@
+import datetime
+
+def get_Date():
+    # input date
+    while True:
+        try:
+            year = int(input('Enter date (year): '))
+            month = int(input('Enter date (month):'))
+            day = int(input('Enter date (day):'))
+			#check date
+            tmp = datetime.date(year, month, day)           
+        except ValueError:
+            print('Values is not correct. Try again.')
+            continue
+        return tmp
+
+def get_temp():
+    #input temperature
+    while True:
+        try:
+            tmp = int(input('Enter Temperature (eg. +8): '))
+        #check temperature
+		except ValueError:                                  
+            print('Values is not correct. Try again.')
+            continue
+        return tmp
+
+def get_humidity():
+    #input humidity
+    while True:
+        try:
+            tmp = int(input('Enter humidity (%): '))
+        #check humidity
+		except ValueError:                                  
+            print('Values is not correct. Try again.')
+            continue
+        if 0<=tmp<=100: 
+			return tmp
+        else: 
+			print('Values is not correct. Try again.')
+
+def get_preasure():
+    #input preasure
+    while True:
+        try:
+            tmp = int(input('Enter preasure (mm): '))
+        #check preasure
+		except ValueError:                              
+            print('Values is not correct. Try again.')
+            continue
+		if tmp >=0 :
+			return tmp
+		else:
+			print('Values is not correct. Try again.')
+		
+
+def get_wspeed():
+    #input wind speed
+    while True:
+        try:
+            tmp = float(input('Enter wind speed (m/sec): '))
+        #check wind speed
+		except ValueError:                              
+            print('Values is not correct. Try again.')
+            continue
+		if tmp >= 0:
+			return tmp	
+		else: 
+			print('Values is not correct. Try again.')
+        
+
+def get_year():
+    while True:
+        try:
+            tmp = int(input('Enter year: '))
+        except ValueError:
+            print('Values is not correct. Try again.')
+            continue
+        if 0<=tmp<=2016: 
+			return tmp
+        else: 
+			print('Values is not correct. Try again.')
+
+def get_month():
+    while True:
+        try:
+            tmp = int(input('Enter month: '))
+        except ValueError:
+            print('Values is not correct. Try again.')
+            continue
+        if 1<=tmp<=12: 
+			return tmp
+        else: 
+			print('Values is not correct. Try again.')
+
+def get_choice():
+    while True:
+        try:
+            tmp = int(input())
+        except ValueError:
+            print('Choice is not correct. Try again.')
+            continue
+        return tmp
\ No newline at end of file
Index: Menu.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Menu.py	(revision )
+++ Menu.py	(revision )
@@ -0,0 +1,35 @@
+import os
+import W_diary
+import Output
+import Input
+
+def clear():
+    #clear desktop
+    os.system('clear')
+
+
+def print_menu():
+    #run menu
+    while True:
+        clear()
+        print ('''      Weather diary
+
+            1. Add/Edit Element
+            2. Remove Element
+            3. Show data
+            4. Show data by month
+            5. Exit
+                      ''')
+        ans = Input.get_choice()                #input menu key
+        if ans == 1:
+            W_diary.add_data()
+        elif ans == 2:
+            W_diary.rm_data()
+        elif ans == 3:
+            Output.show_data()
+        elif ans == 4:
+            Output.show_data_by_month()
+        elif ans == 5:
+            os._exit(1)
+        else:
+            print('Try again')
\ No newline at end of file
Index: W_diary.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- W_diary.py	(revision )
+++ W_diary.py	(revision )
@@ -0,0 +1,39 @@
+import datetime
+import Open_file
+import Input
+
+weather = {}
+
+def push_data():
+
+    d1 = datetime.date(2015, 10, 10)
+    d2 = datetime.date(2015, 10, 12)
+    tmp = {d1:['+10', 750, 48, 3.0, 'W', 'None'],
+           d2:['+8', 747, 53, 3.3, 'SW', 'None']}
+    weather.update(tmp)
+
+
+def add_data():
+#add data to our weather diary#
+    date = Input.get_Date()
+    temp = Input.get_temp()
+    preasure = Input.get_preasure()
+    humidity =  Input.get_humidity()
+    wspeed  = Input.get_wspeed()
+    wdirect = input('Enter wind direction (eg. SW or S): ')
+    prec = input('Enter precipitations (eg. Rain or Snow): ')
+    tmp = {date:[temp, preasure, humidity, wspeed, wdirect, prec]}
+    weather.update(tmp)                                         #rewrite data that already exsist
+    Open_file.save_data(weather)                                #save changes in file
+    tmp = input('Adding/Editing Successful. Press Enter to continue...')
+
+
+def rm_data():
+# remove data from our diary
+    date = Input.get_Date()
+    if date in weather:
+        del weather[date]
+        Open_file.save_data(weather)            #save changes in file
+        tmp = input('Removing Successful. Press Enter to continue...')
+    else:
+        tmp = input('Day in diary not found. Press Enter to continue...')
Index: Main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Main.py	(revision )
+++ Main.py	(revision )
@@ -0,0 +1,9 @@
+import Menu
+import Open_file
+import W_diary
+
+def main ():
+    Open_file.open_data(W_diary.weather)        #load data from file
+    Menu.print_menu()                           #run menu
+
+main()
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.4.3 (/usr/bin/python3.4)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/../Lab1/.idea/WeatherDiary.iml" filepath="$PROJECT_DIR$/../Lab1/.idea/WeatherDiary.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: Lab1_Zamyatin-master/Menu.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/Menu.py	(revision )
+++ Lab1_Zamyatin-master/Menu.py	(revision )
@@ -0,0 +1,36 @@
+import os
+import W_diary
+import Output
+import Input
+
+def clear():
+    #clear desktop
+    os.system('clear')
+
+
+def print_menu():
+    #run menu
+    while True:
+        clear()
+        print ('''      Weather diary
+
+            1. Add/Edit Element
+            2. Remove Element
+            3. Show data
+            4. Show data by month
+            5. Exit
+                      ''')
+	  #input menu key
+        ans = Input.get_choice()                
+        if ans == 1:
+            W_diary.add_data()
+        elif ans == 2:
+            W_diary.rm_data()
+        elif ans == 3:
+            Output.show_data()
+        elif ans == 4:
+            Output.show_data_by_month()
+        elif ans == 5:
+            os._exit(1)
+        else:
+            print('Try again')
\ No newline at end of file
Index: Lab1_Zamyatin-master/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/README.md	(revision )
+++ Lab1_Zamyatin-master/README.md	(revision )
@@ -0,0 +1,1 @@
+# Lab1_Zamyatin
\ No newline at end of file
Index: Lab1_Zamyatin-master/test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lab1_Zamyatin-master/test.py	(revision )
+++ Lab1_Zamyatin-master/test.py	(revision )
@@ -0,0 +1,104 @@
+def get_Date(year, month, day):
+    """
+    >>> get_Date(2014, 12, 23)
+    '2014-12-23'
+    >>> get_Date(2014, 15, 23)
+    Values is not correct. Try again.
+    >>> get_Date(2014, 12, 34)
+    Values is not correct. Try again.
+    >>> get_Date(-2014, 12, 34)
+    Values is not correct. Try again.
+    """
+
+    import datetime
+    while True:
+        try:
+            tmp = datetime.date(year, month, day)           
+        except ValueError:
+            print('Values is not correct. Try again.')
+            break
+        return tmp.isoformat()
+
+def get_temp(tmpp):
+    """
+    >>> get_temp(+9)
+    9
+    >>> get_temp(-45)
+    -45
+    """
+    while True:
+        try:
+            tmp = int(tmpp)
+        except ValueError:                                  
+            print('Values is not correct. Try again.')
+            break
+        return tmp
+
+def get_humidity(tmpp):
+    """
+    >>> get_humidity(-65)
+    Values is not correct. Try again.
+    >>> get_humidity(0)
+    0
+    >>> get_humidity(122)
+    Values is not correct. Try again.   
+    """
+   
+    while True:
+        try:
+            tmp = int(tmpp)
+        except ValueError:                                  
+            print('Values is not correct. Try again.')
+            break
+        if tmp > 100:
+            print('Values is not correct. Try again.')
+            break  
+        if tmp < 0:
+            print('Values is not correct. Try again.')
+            break  
+        return tmp
+
+
+    
+def get_preasure(tmpp):
+    """
+    >>> get_preasure(555)
+    555
+    >>> get_preasure(-43)
+    Values is not correct. Try again.
+    """
+    while True:
+        try:
+            tmp = int(tmpp)
+        except ValueError:                              
+            print('Values is not correct. Try again.')
+            break
+        if tmp<0:
+            print('Values is not correct. Try again.')
+            break
+        return tmp
+
+
+def get_wspeed(tmpp):
+    """
+    >>> get_wspeed(555)
+    555.0
+    >>> get_wspeed(-43)
+    Values is not correct. Try again.
+    """
+    while True:
+        try:
+            tmp = float(tmpp)
+        except ValueError:                              
+            print('Values is not correct. Try again.')
+            break
+        if tmp < 0:
+            print('Values is not correct. Try again.')
+            break  
+        return tmp	
+
+
+
+if __name__ == "__main__":
+    import doctest
+    doctest.testmod()   #verbose=True
Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test.py	(revision )
+++ test.py	(revision )
@@ -0,0 +1,104 @@
+def get_Date(year, month, day):
+    """
+    >>> get_Date(2014, 12, 23)
+    '2014-12-23'
+    >>> get_Date(2014, 15, 23)
+    Values is not correct. Try again.
+    >>> get_Date(2014, 12, 34)
+    Values is not correct. Try again.
+    >>> get_Date(-2014, 12, 34)
+    Values is not correct. Try again.
+    """
+
+    import datetime
+    while True:
+        try:
+            tmp = datetime.date(year, month, day)           
+        except ValueError:
+            print('Values is not correct. Try again.')
+            break
+        return tmp.isoformat()
+
+def get_temp(tmpp):
+    """
+    >>> get_temp(+9)
+    9
+    >>> get_temp(-45)
+    -45
+    """
+    while True:
+        try:
+            tmp = int(tmpp)
+        except ValueError:                                  
+            print('Values is not correct. Try again.')
+            break
+        return tmp
+
+def get_humidity(tmpp):
+    """
+    >>> get_humidity(-65)
+    Values is not correct. Try again.
+    >>> get_humidity(0)
+    0
+    >>> get_humidity(122)
+    Values is not correct. Try again.
+    """
+   
+    while True:
+        try:
+            tmp = int(tmpp)
+        except ValueError:                                  
+            print('Values is not correct. Try again.')
+            break
+        if tmp > 100:
+            print('Values is not correct. Try again.')
+            break  
+        if tmp < 0:
+            print('Values is not correct. Try again.')
+            break  
+        return tmp
+
+
+    
+def get_preasure(tmpp):
+    """
+    >>> get_preasure(555)
+    555
+    >>> get_preasure(-43)
+    Values is not correct. Try again.
+    """
+    while True:
+        try:
+            tmp = int(tmpp)
+        except ValueError:                              
+            print('Values is not correct. Try again.')
+            break
+        if tmp<0:
+            print('Values is not correct. Try again.')
+            break
+        return tmp
+
+
+def get_wspeed(tmpp):
+    """
+    >>> get_wspeed(555)
+    555.0
+    >>> get_wspeed(-43)
+    Values is not correct. Try again.
+    """
+    while True:
+        try:
+            tmp = float(tmpp)
+        except ValueError:                              
+            print('Values is not correct. Try again.')
+            break
+        if tmp < 0:
+            print('Values is not correct. Try again.')
+            break  
+        return tmp	
+
+
+
+if __name__ == "__main__":
+    import doctest
+    doctest.testmod(verbose=True)   #verbose=True
